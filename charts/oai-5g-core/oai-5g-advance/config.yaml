############# Common configuration

# Log level for all the NFs
log_level:
  general: info

# If you enable registration, the other NFs will use the NRF discovery mechanism
register_nf:
  general: yes

http_version: 2
curl_timeout: 6000 #milliseconds can be changed if the network have issues

## general single_nssai configuration
## Defines YAML anchors, which are reused in the config file
snssais:
  - &embb_slice1
    sst: @SLICE1_SST@ #1
    sd: @SLICE1_SD@ # no value before
  - &embb_slice2
    sst: @SLICE2_SST@ #1
    sd: @SLICE2_SD@ #FFFFFF # in hex

############## SBI Interfaces
### Each NF takes its local SBI interfaces and remote interfaces from here, unless it gets them using NRF discovery mechanisms
nfs:
  amf:
    host: @NFS_AMF_HOST@ #oai-amf
    sbi:
      port: 80
      api_version: v1
      interface_name: eth0
    n2:
      interface_name: @IF_N2@
      port: 38412
  smf:
    host: @NFS_SMF_HOST@ #oai-smf
    sbi:
      port: 80
      api_version: v1
      interface_name: eth0
    n4:
      interface_name: @IF_N4@
      port: 8805
  lmf:
    host: oai-lmf
    sbi:
      port: 80
      api_version: v1
      interface_name: eth0
  upf:
    host: @NFS_UPF_HOST@ #oai-upf
    sbi:
      port: 80
      api_version: v1
      interface_name: @IF_SBI@ #eth0
    n3:
      interface_name: @IF_N3@
      port: 2152
    n4:
      interface_name: @IF_N4@
      port: 8805
    n6:
      interface_name: @IF_N6@
    n9:
      interface_name: eth0
      port: 2152
  udm:
    host: @NFS_UDM_HOST@ #oai-udm
    sbi:
      port: 80
      api_version: v1
      interface_name: eth0
  udr:
    host: @NFS_UDR_HOST@ #oai-udr
    sbi:
      port: 80
      api_version: v1
      interface_name: eth0
  ausf:
    host: @NFS_AUSF_HOST@ #oai-ausf
    sbi:
      port: 80
      api_version: v1
      interface_name: eth0
  nrf:
    host: @NFS_NRF_HOST@ #oai-nrf
    sbi:
      port: 80
      api_version: v1
      interface_name: eth0
  nssf:
    host: oai-nssf
    sbi:
      port: 80
      api_version: v1
      interface_name: eth0

#### Common for UDR and AMF
database:
  host: mysql
  user: test
  type: mysql
  password: test
  database_name: oai_db
  generate_random: true
  connection_timeout: 300 # seconds

############## NF-specific configuration
amf:
  amf_name: "OAI-AMF"
  # This really depends on if we want to keep the "mini" version or not
  support_features_options:
    enable_simple_scenario: no # "no" by default with the normal deployment scenarios with AMF/SMF/UPF/AUSF/UDM/UDR/NRF.
                               # set it to "yes" to use with the minimalist deployment scenario (including only AMF/SMF/UPF) by using the internal AUSF/UDM implemented inside AMF.
                               # There's no NRF in this scenario, SMF info is taken from "nfs" section.
    enable_nssf: no
    enable_smf_selection: yes
  relative_capacity: 30
  statistics_timer_interval: 20  # in seconds
  emergency_support: false
  served_guami_list:
    - mcc: @MCC@
      mnc: @MNC@
      amf_region_id: 01
      amf_set_id: 001
      amf_pointer: 01
  plmn_support_list:
    - mcc: @MCC@
      mnc: @MNC@
      tac: @TAC@
      nssai:
        - *embb_slice1
        - *embb_slice2
  supported_integrity_algorithms:
    - "NIA1"
    - "NIA2"
  supported_encryption_algorithms:
    - "NEA0"
    - "NEA1"
    - "NEA2"

smf:
  ue_mtu: 1500
  support_features:
    use_local_subscription_info: no # Use infos from local_subscription_info or from UDM
    use_local_pcc_rules: yes # Use infos from local_pcc_rules or from PCF
  # we resolve from NRF, this is just to configure usage_reporting
  upfs:
    - host: oai-upf
      config:
        enable_usage_reporting: no
  ue_dns:
    primary_ipv4: "@IP_DNS1@"
    primary_ipv6: "2001:4860:4860::8888"
    secondary_ipv4: "@IP_DNS2@"
    secondary_ipv6: "2001:4860:4860::8888"
  ims:
    pcscf_ipv4: "192.168.70.139"
    pcscf_ipv6: "fe80::7915:f408:1787:db8b"
  # the DNN you configure here should be configured in "dnns"
  # follows the SmfInfo datatype from 3GPP TS 29.510
  smf_info:
    sNssaiSmfInfoList:
      - sNssai: *embb_slice1
        dnnSmfInfoList:
          - dnn: "@DNN0@"
          - dnn: "ims"
      - sNssai: *embb_slice2
        dnnSmfInfoList:
          - dnn: "@DNN1@"
  local_subscription_infos:
    - single_nssai: *embb_slice1
      dnn: "@DNN0@"
      qos_profile:
        5qi: @SLICE1_5QI@ 
        session_ambr_ul: "@SLICE1_UPLINK@" 
        session_ambr_dl: "@SLICE1_DOWNLINK@" 
    - single_nssai: *embb_slice1
      dnn: "ims"
      qos_profile:
        5qi: @SLICE1_5QI@ 
        session_ambr_ul: "@SLICE1_UPLINK@" 
        session_ambr_dl: "@SLICE1_DOWNLINK@" 
    - single_nssai: *embb_slice2
      dnn: "@DNN1@"
      qos_profile:
        5qi: @SLICE2_5QI@ 
        session_ambr_ul: "@SLICE2_UPLINK@" 
        session_ambr_dl: "@SLICE2_DOWNLINK@" 

############### LMF Configuration 
lmf:
  http_threads_count: 8
  gnb_id_bits_count: 28
  num_gnb: 1
  trp_info_wait_ms: 10000
  positioning_wait_ms: 10000
  measurement_wait_ms: 10000
  support_features:
    request_trp_info: no
    determine_num_gnb: yes
    use_http2: yes
    use_fqdn_dns: no
    register_nrf: yes

upf:
  support_features:
    enable_bpf_datapath: no    # If "on": BPF is used as datapath else simpleswitch is used, DEFAULT= off
    enable_snat: @ENABLE_SNAT@ # If "on": Source natting is done for UE, DEFAULT= off
  remote_n6_gw: 127.0.0.1      # Dummy host since simple-switch does not use N6 GW
  upf_info:
    sNssaiUpfInfoList:
    - sNssai: *embb_slice1
      dnnUpfInfoList:
        - dnn: @DNN0@
        - dnn: ims
    - sNssai: *embb_slice2
      dnnUpfInfoList:
        - dnn: @DNN1@

## DNN configuration
dnns:
  - dnn: "@DNN0@"
    pdu_session_type: "@DNN0_PDU_TYPE@"
    ipv4_subnet: "12.1.1.0/24"
  - dnn: "@DNN1@"
    pdu_session_type: "@DNN1_PDU_TYPE@"
    ipv4_subnet: "14.1.1.0/24"
  - dnn: "ims"
    pdu_session_type: "IPV4V6"
    ipv4_subnet: "16.1.1.0/24"
    ipv6_prefix: "2001:1:2::/64"
